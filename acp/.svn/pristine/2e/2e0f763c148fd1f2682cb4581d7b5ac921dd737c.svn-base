<?php
/*
 * 用户邮箱信息查询
 * 
* */
require_once BASEPATH . 'libraries/md_memcache.php';

class Edm_user_m extends CI_Model {
	
	//memcache缓存的key前缀
	const GET_ALL_USER = 'get_all_user%d';//全部用户
	const GET_ONLY_REGISTER_USER = 'get_only_register_user%d';//仅注册用户
	const GET_FAVORS_ALL_USER = 'get_favors_all_user%d';//全部关注用户
	const GET_COMMENTS_ALL_USER = 'get_comments_all_user%d';//全部评论用户
	const GET_ONE_SUPPORT_USER = 'get_one_support_user%d';//支持过一次项目的用户
	const GET_MANY_SUPPORT_USER = 'get_many_support_user%d';//支持过多次项目的用户
	
	const GET_ALL_USER_PRODUCT = 'get_all_user_product%d';//单项目的全部用户
	const GET_FAVORS_USER_PRODUCT = 'get_favors_user_product%d';//单项目的关注用户
	const GET_COMMENTS_USER_PRODUCT = 'get_comments_user_product%d';//单项目的评论用户
	const GET_ONE_SUPPORT_USER_PRODUCT = 'get_one_support_user_product%d';//单项目支持一次的用户
	const GET_MANY_SUPPORT_USER_PRODUCT = 'get_many_support_user_product%d';//单项目支持多次的用户
	
	public function __construct(){
		parent::__construct();
		$this->load->database();
	}

	/*
	* 获取全部注册用户信息
	* return 成功返回数组，失败返回false
	*/
	public function get_all_user($num=''){
		$result = FALSE;	
		$cache_key = sprintf('%s', "all".date("YmdH")."user");
		if(md_memcache::get($cache_key)){
			$res = md_memcache::get($cache_key);
		}else{
			$sql = "SELECT id as user_id,email FROM md_users where email !='' order by ctime desc";
			$res_arr = $this->db->query($sql)->result_array();
			//$res_str = json_encode($res_arr);
			md_memcache::set($cache_key,$res_arr,3600);
			$res = md_memcache::get($cache_key);
			//$res = json_decode($res_json);
		}
		$refund_email_arr = $this->get_refund_email();
		$refund_email = array_flip($refund_email_arr);

		if(empty($res)){
			return $result;
		}else{
			$cache_key_num = sprintf('%s', "alluser".date("YmdH")."number");
			if(!empty($refund_email)){
				if(md_memcache::get($cache_key_num)){
					$user_info = md_memcache::get($cache_key_num);
				}else{
					foreach ($res as $key=>$val){
						if(!array_key_exists($val["email"],$refund_email)){
							$user_info_arr[] = $val;
						}
					}
					md_memcache::set($cache_key_num,$user_info_arr,3600);
					$user_info = md_memcache::get($cache_key_num);
				}
			}else{
				$user_info = $res;
			}
			
			if(!empty($num)){
				$user_info = array_slice($user_info,0,$num);
			}
			return $user_info;
		}
	}
	
	
// 	public function get_all_user($num=''){
// 		$result = FALSE;
// 		$sql = "SELECT id as user_id,username,email,ctime FROM md_users where email !='' order by ctime desc";
// 		$res = $this->db->query($sql)->result_array();
// 		//$refund_email = $this->get_refund_email();
// 		$refund_email_arr = $this->get_refund_email();
// 		$refund_email = array_flip($refund_email_arr);
// 		if(empty($res)){
// 			return $result;
// 		}else{
// 			if(!empty($refund_email)){
// 				foreach ($res as $key=>$val){
// 					if(!array_key_exists($val["email"],$refund_email)){
// 						$user_info[] = $val;
// 					}
// 				}
// 			}else{
// 				$user_info = $res;
// 			}
// 			if(!empty($num)){
// 				$user_info = array_slice($user_info,0,$num);
				
// 			}
// 			return $user_info;
// 		}
// 	}
	
	
	/*
	 * 获取修改后的全部用户信息
	* return 成功返回数组，失败返回false
	*/
	public function edit_all_user($num=''){
		$result = FALSE;
		$sql = "SELECT id as user_id,email FROM md_users where email !='' order by ctime desc";

		$res = $this->db->query($sql)->result_array();
		if(empty($res)){
			return $result;
		}else{
			if(!empty($refund_email)){
				foreach ($res as $key=>$val){
					if(!in_array($val["email"],$refund_email)){
						$user_info[] = $val;
					}
				}
			    if(!empty($num)){
					foreach ($user_info as $m=>$n){
						if($m < $num){
							$userinfo[] = $n;
						}
					}
					return $userinfo;
				}else{
					return $user_info;
				}
			}else{
				return $res;
			}
		}
	}
	
	/*
	 * 获取修改后的全部用户信息
	* return 成功返回数组，失败返回false
	*/
	public function get_username_email($email=''){
		$result = FALSE;
		$sql = "SELECT nickname FROM md_users where email ='".$email."'";
		$res = $this->db->query($sql)->row_array();
		//$this->db->close();
		if(empty($res)){
			return $result;
		}else{
			return $res["nickname"];
		}
	}
	
	/*
	 * 获取仅注册用户的信息
	* return 成功返回数组，失败返回false 
	*/
	public function get_only_register_user($num=""){
		$result = FALSE;
		$favors =array();
		$comments =array();
		$onesupport =array();
		$manysupport =array();
		
		$favors = $this->get_favors_all_user();
		$comments = $this->get_comments_all_user();
		$onesupport = $this->get_one_support_user();
		$manysupport = $this->get_many_support_user();
		
		$res_arr = $this->unset_array($favors,$comments,$onesupport,$manysupport);
		$user_email_arr = $this->get_new_array($res_arr,"email");	
		$user_email = array_flip($user_email_arr);
		
		$all_user = $this->get_all_user();
		$register = array();

		$cache_key = sprintf('%s', "ONLYREGISTER".date("YmdH")."NUMBER");
		if(md_memcache::get($cache_key)){
			$user_info = md_memcache::get($cache_key);
		}else{
			foreach ($all_user as $key=>$val){
				if(!array_key_exists($val['email'],$user_email)){
					$register[] = $val;
				}else {
					$register_other[] = $val;
				}
			}
			md_memcache::set($cache_key,$register,3600);
			$user_info = md_memcache::get($cache_key);
		}
		if(!empty($num)){
			$user_info = array_slice($user_info,0,$num);
		}
		return $user_info;
	}

	/*
	* 获取全部项关注用户信息
	* return 成功返回数组，失败返回false 
	*/
	public function get_favors_all_user($num=""){
		$result = FALSE;
		
		$cache_key = sprintf('%s', "favour".date("YmdH")."".$num."user");
		if(md_memcache::get($cache_key)){
			$res = md_memcache::get($cache_key);
		}else{
			$sql = "SELECT t1.user_id,t2.email FROM md_product_favors t1 left join md_users t2 on t1.user_id = t2.id ";
			$sql .=" where t2.email !='' group by t1.user_id order by t2.ctime desc";
			$res_arr = $this->db->query($sql)->result_array();
			
			md_memcache::set($cache_key, $res_arr, 3600);
			$res = md_memcache::get($cache_key);
		}
	    $refund_email_arr = $this->get_refund_email();
	    $refund_email = array_flip($refund_email_arr);
	    if(empty($res)){
			return $result;
		}else{			
			$cache_key = sprintf('%s', "FAVOURUSER".date("YmdH")."NUMBER");
			if(!empty($refund_email)){
				if(md_memcache::get($cache_key)){
					$user_info = md_memcache::get($cache_key);
				}else{
					foreach ($res as $key=>$val){
						if(!array_key_exists($val["email"],$refund_email)){
							$user_info_arr[] = $val;
						}
					}
					md_memcache::set($cache_key, $user_info_arr,3600);
					$user_info = md_memcache::get($cache_key);
				}
			}else{
				$user_info = $res;
			}
			if(!empty($num)){
				$user_info = array_slice($user_info,0,$num);
			}
			return $user_info;
		}
	}
	/*
	* 获取全部评论用户信息
	* return 成功返回数组，失败返回false
	*/
	public function get_comments_all_user($num=""){
		$result = FALSE;
		
		$cache_key = sprintf('%s', "ALLCOMMENTS".date("YmdH")."USER");
		if(md_memcache::get($cache_key)){
			$res = md_memcache::get($cache_key);
		}else{
			$sql = "SELECT t1.user_id,t2.email FROM md_product_comments t1 left join md_users t2 on t1.user_id = t2.id ";
			$sql .=" where t2.email !='' GROUP BY t1.user_id order by t2.ctime desc";
			$res_arr = $this->db->query($sql)->result_array();
			md_memcache::set($cache_key, $res_arr, 3600);
			$res = md_memcache::get($cache_key);
		}
		
		$refund_email_arr = $this->get_refund_email();
		$refund_email = array_flip($refund_email_arr);
	    	if(empty($res)){
			return $result;
		}else{		
			$cache_key = sprintf('%s', "COMMENTUSER".date("YmdH")."NUMBER");
			if(!empty($refund_email)){
				if(md_memcache::get($cache_key)){
					$user_info = md_memcache::get($cache_key);
				}else{
					foreach ($res as $key=>$val){
						if(!array_key_exists($val["email"],$refund_email)){
							$user_info_arr[] = $val;
						}
					}
					md_memcache::set($cache_key, $user_info_arr,3600);
					$user_info = md_memcache::get($cache_key);
				}
			}else{
				$user_info = $res;
			}
			if(!empty($num)){
				$user_info = array_slice($user_info,0,$num);
			}
			return $user_info;
		}
	}

	/*
	* 获取支持过一次项目的用户信息
	* return 成功返回数组，失败返回false 
	*/
	public function get_one_support_user($num=""){
		$result = FALSE;
		
		$cache_key = sprintf('%s', "ONESUPPORT".date("YmdH")."USER");
		if(md_memcache::get($cache_key)){
			$res = md_memcache::get($cache_key);
		}else{
			$sql = "SELECT t1.user_id,t2.email FROM md_product_back t1 left join md_users t2 on t1.user_id = t2.id ";
			$sql .=" where t1.if_pay =1 and t2.email !='' GROUP BY t1.user_id HAVING COUNT(t1.user_id) = 1 order by t2.ctime desc ";
			$res_arr = $this->db->query($sql)->result_array();
			md_memcache::set($cache_key, $res_arr, 3600);
			$res = md_memcache::get($cache_key);
		}
		
		$refund_email_arr = $this->get_refund_email();
		$refund_email = array_flip($refund_email_arr);
	    if(empty($res)){
			return $result;
		}else{
			$cache_key = sprintf('%s', "ONESUPPORTUSER".date("YmdH")."NUMBER");
			if(!empty($refund_email)){
				if(md_memcache::get($cache_key)){
					$user_info = md_memcache::get($cache_key);
				}else{
					foreach ($res as $key=>$val){
						if(!array_key_exists($val["email"],$refund_email)){
							$user_info_arr[] = $val;
						}
					}
					md_memcache::set($cache_key, $user_info_arr,3600);
					$user_info = md_memcache::get($cache_key);
				}
			}else{
				$user_info = $res;
			}
			if(!empty($num)){
				$user_info = array_slice($user_info,0,$num);
			}
			return $user_info;
		}
	}

	/*
	* 获取支持过多次项目的用户信息
	* return 成功返回数组，失败返回false
	*/
	public function get_many_support_user($num=""){
		$result = FALSE;
		
		$cache_key = sprintf('%s', "MORESUPPORT".date("YmdH")."USER");
		if(md_memcache::get($cache_key)){
			$res = md_memcache::get($cache_key);
		}else{
			$sql = "SELECT t1.user_id,t2.email FROM md_product_back t1 left join md_users t2 on t1.user_id = t2.id ";
			$sql .=" where t1.if_pay =1 and t2.email !='' GROUP BY t1.user_id HAVING COUNT(t1.user_id) > 1 order by t2.ctime desc";
			$res_arr = $this->db->query($sql)->result_array();
			md_memcache::set($cache_key, $res_arr, 3600);
			$res = md_memcache::get($cache_key);
		}
		
		$refund_email_arr = $this->get_refund_email();
		$refund_email = array_flip($refund_email_arr);
	    if(empty($res)){
			return $result;
		}else{		
			$cache_key = sprintf('%s', "MANYSUPPORTUSER".date("YmdH")."NUMBER");
			if(!empty($refund_email)){
				if(md_memcache::get($cache_key)){
					$user_info = md_memcache::get($cache_key);
				}else{
					foreach ($res as $key=>$val){
						if(!array_key_exists($val["email"],$refund_email)){
							$user_info_arr[] = $val;
						}
					}
					md_memcache::set($cache_key, $user_info_arr,3600);
					$user_info = md_memcache::get($cache_key);
				}
			}else{
				$user_info = $res;
			}
			if(!empty($num)){
				$user_info = array_slice($user_info,0,$num);
			}
			return $user_info;
			
		}
	}
	
	/*
	* 根据项目编号获取全部用户
	* $product 产品编号数组
	* return 成功返回数组，失败返回false
	*/
	public function get_all_user_product($product,$num=""){
		$result = FALSE;
		$favors_user = array();
		$comments_user = array();
		$one_support_user = array();
		$many_support_user = array();
		
		if(empty($product)){
			return $result;
		}else{
			$favors_user = $this->get_favors_user_product($product);//关注用户
			$comments_user = $this->get_comments_user_product($product);//评论用户
			$one_support_user = $this->get_one_support_user_product($product);//支持一次用户
			$many_support_user = $this->get_many_support_user_product($product);//支持多次用户
			$res = $this->unset_array($favors_user,$comments_user,$one_support_user,$many_support_user);
			if(!empty($num)){
				$all_arr = array_slice($res,0,$num);
				return $all_arr;
			}else{
				return $res;
			}
		}
	}
	
	
	/*
	* 对返回的二维数组进行合并并去除重复值
	* 数组
	* return 成功返回数组，失败返回空数组
	*/
	public function unset_array($favors,$comments,$one_support,$many_support,$register){
		$result = FALSE;
		$res = array();
		$res_arr = array();
		$res_temp = array();
		
	    if(empty($favors) && empty($comments) && empty($one_support) && empty($many_support) && empty($register)){
			return $res_temp;//空数组
		}else{
			if(!empty($favors)){
				$res[] = $favors;
			}
			if(!empty($comments)){
				$res[] = $comments;
			}
			if(!empty($one_support)){
				$res[] = $one_support;
			}
			if(!empty($many_support)){
				$res[] = $many_support;
			}
			if(!empty($register)){
				$res[] = $register;
			}
			if(!empty($res)){
				foreach($res as $key=>$val){
					foreach($val as $k=>$v){
						$res_new[] = $v;
					}
				}
				$res_arr = $this->array_unique_2d($res_new);
				if(!empty($res_arr)){
					return $res_arr;
				}else{
					return $res_temp;
				}
				
			}else{
				return $res_temp;
			}
		}
	}
	
	
	/*
	 * 二维数组降为一维数组,并删除空值
	* $array 二维数组,$name 键值
	* return 成功返回数组，失败返回false
	*/
	public function get_new_array($user_array,$name){
		$result = FALSE;
		$new_array = array();
		if(!empty($user_array)){
			foreach($user_array as $key=>$val){
				$new_array[] = $val[$name];
			}
			return array_filter($new_array);
		}else{
			return $result;
		}
	}
	
	//去除重复项
	public function array_unique_2d($array2D){
		$temp = $res = array();
		if(empty($array2D)){
			return $temp;
		}
		foreach ($array2D as $v){
			$v = json_encode($v);  //降维,将一维数组转换字符串
			$temp[] = $v;
		}
		$temp = array_unique($temp);    //去掉重复的字符串,也就是重复的一维数组
	
		foreach ($temp as $item){
			$res[] = json_decode($item,true);   //再将拆开的数组重新组装
		}
		return $res;
	}
	
	/*
	 * 根据项目编号获取关注用户
	* $product 产品编号
	* return 成功返回数组，失败返回false
	*/
	public function get_favors_user_product($product,$num=""){
		$result = FALSE;
		if(!empty($product)){
			$product_arr = explode(",",trim($product,","));
			$sql = "SELECT t1.user_id,t2.email FROM md_product_favors t1 left join md_users t2 on t1.user_id = t2.id where";
			if(!empty($product_arr)){
				foreach ($product_arr as $m=>$n) {
					$pro_id = intval($n);
					if($m == 0){
						$sql .=" ( t1.pro_id = ".$pro_id." ";
					}else{
						$sql .="  or t1.pro_id = ".$pro_id." ";
					}
				}
				$sql .=" )";
			}
			
			$sql .=" and t2.email !='' group by t1.user_id order by t2.ctime desc ";
			$res = $this->db->query($sql)->result_array();
			$refund_email_arr = $this->get_refund_email();
			$refund_email = array_flip($refund_email_arr);
			if(empty($res)){
				return $result;
			}else{
				$cache_key_num = sprintf('%s', "allproduct".date("YmdH")."".$product."number");
				if(!empty($refund_email)){
					if(md_memcache::get($cache_key_num)){
						$user_info = md_memcache::get($cache_key_num);
					}else{
						foreach ($res as $key=>$val){
							if(!array_key_exists($val["email"],$refund_email)){
								$user_info_arr[] = $val;
							}
						}
						md_memcache::set($cache_key_num,$user_info_arr,3600);
						$user_info = md_memcache::get($cache_key_num);
					}
				}else{
					$user_info = $res;
				}
					
				if(!empty($num)){
					$user_info = array_slice($user_info,0,$num);
				}
				return $user_info;
				
				
			}
		}else{
			return $result;
		}
	}
	
	/*
	* 根据项目编号获取评论用户
	* $product 产品编号
	* return 成功返回数组，失败返回false
	*/
	public function get_comments_user_product($product,$num=""){
		$result = FALSE;
		if(!empty($product)){
			$sql = "SELECT t1.user_id,t2.email FROM md_product_comments t1 left join md_users t2 on t1.user_id = t2.id where ";
			
			$product_arr = explode(",",trim($product,","));
			if(!empty($product_arr)){
				foreach ($product_arr as $m=>$n) {
					$pro_id = intval($n);
					if($m == 0){
						$sql .=" ( t1.pro_id = ".$pro_id." ";
					}else{
						$sql .="  or t1.pro_id = ".$pro_id." ";
					}
				}
				$sql .=" )";
			}
			$sql .="  and t2.email !='' GROUP BY t1.user_id order by t2.ctime desc";

			$res = $this->db->query($sql)->result_array();
			$refund_email_arr = $this->get_refund_email();
			$refund_email = array_flip($refund_email_arr);
			if(empty($res)){
				return $result;
			}else{
				$cache_key_num = sprintf('%s', "commentproduct".date("YmdH")."".$product."number");
				if(!empty($refund_email)){
					if(md_memcache::get($cache_key_num)){
						$user_info = md_memcache::get($cache_key_num);
					}else{
						foreach ($res as $key=>$val){
							if(!array_key_exists($val["email"],$refund_email)){
								$user_info_arr[] = $val;
							}
						}
						md_memcache::set($cache_key_num,$user_info_arr,3600);
						$user_info = md_memcache::get($cache_key_num);
					}
				}else{
					$user_info = $res;
				}
					
				if(!empty($num)){
					$user_info = array_slice($user_info,0,$num);
				}
				return $user_info;
			}
		}else{
			return $result;
		}
	}

	
	/*
	* 根据项目编号获取支持过一次的用户
	* $product 产品编号
	* return 成功返回数组，失败返回false
	*/
	public function get_one_support_user_product($product,$num=""){
		$result = FALSE;
		if(!empty($product)){
			$sql = "SELECT t1.user_id,t2.email FROM md_product_back t1 left join md_users t2 on t1.user_id = t2.id ";
			$sql .=" where t1.if_pay =1 ";
			
			$product_arr = explode(",",trim($product,","));
			if(!empty($product_arr)){
				foreach ($product_arr as $m=>$n) {
					$pro_id = intval($n);
					if($m == 0){
						$sql .=" and ( t1.pro_id = ".$pro_id." ";
					}else{
						$sql .="  or t1.pro_id = ".$pro_id." ";
					}
				}
				$sql .=" )";
			}
			
			$sql .=" and t2.email !=''  GROUP BY t1.user_id HAVING count(t1.user_id) = 1 order by t2.ctime desc ";

			$res = $this->db->query($sql)->result_array();
			$refund_email_arr = $this->get_refund_email();
			$refund_email = array_flip($refund_email_arr);
			if(empty($res)){
				return $result;
			}else{
				$cache_key_num = sprintf('%s', "onesupportproduct".date("YmdH")."".$product."number");
				if(!empty($refund_email)){
					if(md_memcache::get($cache_key_num)){
						$user_info = md_memcache::get($cache_key_num);
					}else{
						foreach ($res as $key=>$val){
							if(!array_key_exists($val["email"],$refund_email)){
								$user_info_arr[] = $val;
							}
						}
						md_memcache::set($cache_key_num,$user_info_arr,3600);
						$user_info = md_memcache::get($cache_key_num);
					}
				}else{
					$user_info = $res;
				}
					
				if(!empty($num)){
					$user_info = array_slice($user_info,0,$num);
				}
				return $user_info;
			}
		}else{
			return $result;
		}
	}
	
	/*
	* 根据项目编号获取支持过多次的用户信息
	* $product 产品编号
	* return 成功返回数组，失败返回false
	*/
	public function get_many_support_user_product($product,$num=""){
		$result = FALSE;
		if(!empty($product)){
			$sql = "SELECT t1.user_id,t2.email FROM md_product_back t1 left join md_users t2 on t1.user_id = t2.id ";
			$sql .=" where t1.if_pay =1 ";
			
			$product_arr = explode(",",trim($product,","));
			if(!empty($product_arr)){
				foreach ($product_arr as $m=>$n) {
					$pro_id = intval($n);
					if($m == 0){
						$sql .=" and ( t1.pro_id = ".$pro_id." ";
					}else{
						$sql .="  or t1.pro_id = ".$pro_id." ";
					}
				}
				$sql .=" )";
			}
			
			$sql .=" and t2.email !=''  GROUP BY t1.user_id HAVING count(t1.user_id) > 1 order by t2.ctime desc  ";

			$res = $this->db->query($sql)->result_array();
			$refund_email_arr = $this->get_refund_email();
			$refund_email = array_flip($refund_email_arr);
			if(empty($res)){
				return $result;
			}else{
				$cache_key_num = sprintf('%s', "moresupportproduct".date("YmdH")."".$product."number");
				if(!empty($refund_email)){
					if(md_memcache::get($cache_key_num)){
						$user_info = md_memcache::get($cache_key_num);
					}else{
						foreach ($res as $key=>$val){
							if(!array_key_exists($val["email"],$refund_email)){
								$user_info_arr[] = $val;
							}
						}
						md_memcache::set($cache_key_num,$user_info_arr,3600);
						$user_info = md_memcache::get($cache_key_num);
					}
				}else{
					$user_info = $res;
				}
					
				if(!empty($num)){
					$user_info = array_slice($user_info,0,$num);
				}
				return $user_info;
			}
		}else{
			return $result;
		}
	}
	
	
	
	/*
	 * 获取多项目确认选择的用户信息
	* $product 产品编号
	* return 成功返回数组，失败返回false
	*/
	public function get_final_user_info($register='',$favors='',$comments='',$one_support='',$many_supprot=''){
		$res =array();
		$res_register = array();
		$res_favors = array();
		$res_comments = array();
		$res_support_one = array();
		$res_support_many = array();
		if(!empty($register)){
			$res_register = $this->get_only_register_user($register);
		}
		if(!empty($favors)){
			$res_favors = $this->get_favors_all_user($favors);
		}
		if(!empty($comments)){
			$res_comments = $this->get_comments_all_user($comments);
		}
		if(!empty($one_support)){
			$res_support_one = $this->get_one_support_user($one_support);
		}
		if(!empty($many_supprot)){
			$res_support_many = $this->get_many_support_user($many_supprot);
		}
		$res = $this->unset_array($res_register,$res_favors,$res_comments,$res_support_one,$res_support_many);
		return $res;
	}
	
	/*
	 * 获取单项目确认选择的用户信息
	* $product 产品编号
	* return 成功返回数组，失败返回false
	*/
	public function get_final_single_user($product,$favors='',$comments='',$one_support='',$many_supprot=''){
		$result = false;//失败时返回值
		$res =array();//成功时返回的数组
		$num = 0;//空数据返回的值
		$res_favors = array();
		$res_comments = array();
		$res_support_one = array();
		$res_support_many = array();
		$res_new = array();
		if(empty($product)){
			return $result;
		}else{
			if(!empty($favors)){
				$res_favors = $this->get_favors_user_product($product,$favors);
			}
			if(!empty($comments)){
				$res_comments = $this->get_comments_user_product($product,$comments);
			}
			if(!empty($one_support)){
				$res_support_one = $this->get_one_support_user_product($product,$one_support);
			}
			if(!empty($many_supprot)){
				$res_support_many = $this->get_many_support_user_product($product,$many_supprot);
			}
			$res = $this->unset_array($res_favors,$res_comments,$res_support_one,$res_support_many);
			if(empty($res)){
				return $num;//空数据
			}else{
				return $res;
			}
		}
	}
	
	
	//保存站内用户多项目推广活动信息
	public function insert_inside_more($data){
		$sql = 'INSERT INTO md_edm_info (pro_id,pro_name,item_num,item_content,serial_num,pro_picture,pro_url,email_title,email_des,email_contents,user_side,user_property,user_pro_id,user_type,content_template,area,send_user_id,send_user,tag,';
		$sql .= 'send_num,arrive_num,open_num,order_num,pay_num,ctime,send_time,status,all_user,register_user,favors_user,comments_user,support_one,support_more,total_num) VALUES ';
		
		$sql .=' ("'.$data["pro_id"].'","'.$data["pro_name"].'","'.$data["item_num"].'","'.$data["item_content"].'","'.$data["serial_num"].'","'.$data["pro_picture"].'","'.$data["pro_url"].'","'.$data["email_title"].'","'.$data["email_des"].'","'.$data["email_contents"].'",';
		$sql .=' "'.$data["user_side"].'","'.$data["user_property"].'","'.$data["user_pro_id"].'","'.$data["user_type"].'","'.$data["content_template"].'","'.$data["area"].'","'.$data["send_user_id"].'","'.$data["send_user"].'","'.$data["tag"].'","'.$data["send_num"].'",';
		$sql .=' "'.$data["arrive_num"].'","'.$data["open_num"].'","'.$data["order_num"].'","'.$data["pay_num"].'","'.$data["ctime"].'","'.$data["send_time"].'","'.$data["status"].'","'.$data["all_user"].'","'.$data["register_user"].'","'.$data["favors_user"].'","'.$data["comments_user"].'","'.$data["support_one"].'","'.$data["support_more"].'","'.$data["total_num"].'") ';
		
		//echo $sql."<br>";
		$result = $this->db->query($sql);
		
		return $result;
	}
	
	
	//保存用户提交的信息，返回最终的id号
	public function get_inside_id($data){
		$sql = 'INSERT INTO md_edm_info (pro_id,pro_name,item_num,item_content,serial_num,pro_picture,pro_url,email_title,email_des,email_contents,user_side,user_property,user_pro_id,user_type,content_template,area,send_user_id,send_user,tag,';
		$sql .= 'send_num,arrive_num,open_num,order_num,pay_num,ctime,send_time,status,all_user,register_user,favors_user,comments_user,support_one,support_more,total_num) VALUES ';
		
		$sql .=' ("'.$data["pro_id"].'","'.$data["pro_name"].'","'.$data["item_num"].'","'.$data["item_content"].'","'.$data["serial_num"].'","'.$data["pro_picture"].'","'.$data["pro_url"].'","'.$data["email_title"].'","'.$data["email_des"].'","'.$data["email_contents"].'",';
		$sql .=' "'.$data["user_side"].'","'.$data["user_property"].'","'.$data["user_pro_id"].'","'.$data["user_type"].'","'.$data["content_template"].'","'.$data["area"].'","'.$data["send_user_id"].'","'.$data["send_user"].'","'.$data["tag"].'","'.$data["send_num"].'",';
		$sql .=' "'.$data["arrive_num"].'","'.$data["open_num"].'","'.$data["order_num"].'","'.$data["pay_num"].'","'.$data["ctime"].'","'.$data["send_time"].'","'.$data["status"].'","'.$data["all_user"].'","'.$data["register_user"].'","'.$data["favors_user"].'","'.$data["comments_user"].'","'.$data["support_one"].'","'.$data["support_more"].'","'.$data["total_num"].'") ';
		
		//echo $sql."<br>";
		$this->db->query($sql);
	
		return $this->db->insert_id();

	}
	
	
	//保存用户提交的信息，返回最终的id号
	public function get_edm_info($edm_id){
		$sql = "SELECT id,pro_id,pro_name,email_title,email_des,email_contents,item_num,serial_num,item_content,user_side,pro_picture,pro_url,send_user,tag FROM md_edm_info where 1=1 and id=".$edm_id." ";
		$res = $this->db->query($sql)->row_array();
		//$this->db->close();
		return $res;
	}
	
	//保存用户提交的信息，返回最终的id号
	public function update_edm_statue($edm_id,$state){
		if(!empty($state)){
			$sql = "update md_edm_info  set status = ".$state." where 1=1 and id=".$edm_id." ";
		}else{
			$sql = "update md_edm_info  set status = 2 where 1=1 and id=".$edm_id." ";
		}
                //echo $sql;exit;               
		$res = $this->db->query($sql);
		//$this->db->close();
		return $res;
	}
	
	
	//保存用户提交的信息，返回最终的id号
	public function update_send_user($edm_id,$user){
		$sql = "update md_edm_info  set send_user = '".$user."' where 1=1 and id=".$edm_id." ";
		$res = $this->db->query($sql);
		//$this->db->close();
		return $res;
	}
	
	//保存用户提交的信息，返回最终的id号
	public function get_edm_sendstate($state){
		$sql = "SELECT * FROM md_edm_info where 1=1 and status=".$state." and ctime >='2015-06-10 00:00:00' order by id desc limit 1";
		$res = $this->db->query($sql)->row_array();
		//$this->db->close();
		return $res;
	}
	
	//保存站内用户话题性推广活动信息
	public function insert_inside_topic(){
	}
	
	/*
	 * 根据查询条件获取edm列表
	* $product 产品编号
	* return 成功返回数组，失败返回false
	*/
	public function search_edm_list($data){
		$result = FALSE;
			
		$sql = "SELECT * FROM md_edm_info where 1=1 ";
	
		if(!empty($data["user_side"])){
			$sql.=" and user_side = ".$data["user_side"]." ";
		}
		if(!empty($data["email"])){
			$sql.=" and send_user like '%".$data["email"]."%' ";
		}
		if(!empty($data["pro_id"])){
			$sql.=" and pro_id =".$data["pro_id"]." ";
		}
		if(!empty($data["pro_name"])){
			$sql.=" and pro_name like '%".$data["pro_name"]."%' ";
		}
		if(!empty($data["content_template"])){
			$sql.="and content_template = ".$data["content_template"]." ";
		}

		if(!empty($data["start_time"])){
			$sql.=" and ctime >= '".$data["start_time"]."' ";
		}
		if(!empty($data["end_time"])){
			$sql.=" and ctime <= '".$data["end_time"]."' ";
		}
	
		if(!empty($data["area"])){
			$sql.="";
		}
		if(!empty($data["email_title"])){
			$sql.=" and email_title like '%".$data["email_title"]."%' ";
		}
		if(!empty($data["user_id"])){
			$sql.=" and send_user_id like '%".$data["user_id"]."%' ";
		}
	
		if($data["seach_type"] == 2){
			$sql.=" group by id ";
		}
		$sql.=" order by send_time,id desc";

	    if(!empty($data["page"]) && !empty($data["rows"])){
			if($data["page"] > 1){
				$start = ($data["page"] -1) * $data["rows"];
				$sql.=" limit ".$start.",".$data["rows"]." ";
			}else{
				$sql.=" limit ".$data["rows"]." ";
			}
		}
		
		$res = $this->db->query($sql)->result_array();
		if(empty($res)){
			return $result;
		}else{
			return $res;
		}
	}
	
	/*
	 * 根据查询条件获取edm列表
	* $product 产品编号
	* return 成功返回数组，失败返回false
	*/
	public function search_edm($data){
		$result = FALSE;
			
		$sql = "SELECT * FROM md_edm_info where 1=1 ";
		
		if(!empty($data["user_side"])){
			$sql.=" and user_side = ".$data["user_side"]." ";
		}
		if(!empty($data["email"])){
			$sql.=" and send_user like '%".$data["email"]."%' ";
		}
		if(!empty($data["pro_id"])){
			$sql.=" and pro_id =".$data["pro_id"]." ";
		}
		if(!empty($data["pro_name"])){
			$sql.=" and pro_name like '%".$data["pro_name"]."%' ";
		}
		if(!empty($data["content_template"])){
			$sql.="and content_template = ".$data["content_template"]." ";
		}
		
		if(!empty($data["area"])){
			$sql.="";
		}
		if(!empty($data["email_title"])){
			$sql.=" and email_title like '%".$data["email_title"]."%' ";
		}
		if(!empty($data["user_id"])){
			$sql.=" and send_user_id like '%".$data["user_id"]."%' ";
		}
		
		if($data["seach_type"] == 2){
			$sql.=" group by id ";
		}
		$sql.=" order by send_time,id desc";
		//echo $sql;
		//EDM查询的分页在数组组合时实现
	    if($data["seach_type"] == 1){
	    	if(!empty($data["page"]) && !empty($data["rows"])){
	    		if($data["page"] > 1){
	    			$start = ($data["page"] -1) * $data["rows"];
	    			$sql.=" limit ".$start.",".$data["rows"]." ";
	    		}else{
	    			$sql.=" limit ".$data["rows"]." ";
	    		}
	    	}
		}	
		
		
		$num = $this->count_emd_info();

		if($data["seach_type"] == 2){
			if(!empty($data["page"]) && !empty($data["rows"])){
				if($data["page"] > 1){
					$start = ($data["page"] -1) * $data["rows"];
					if($num >= $start){
						$sql.=" limit ".$start.",".$data["rows"]." ";
					}else{
						$sql.=" limit 0,".$data["rows"]." ";
					}
				}else{
					$sql.=" limit ".$data["rows"]." ";
				}
			}
		}
		$res = $this->db->query($sql)->result_array();
		if(empty($res)){
			return $result;
		}else{
			return $res;
		}
	}
	
	
	public function edm_user_serach($data){
		$res = array();
		$sql = "SELECT t1.id,t3.id as user_id,t1.email,t1.subject,t1.send_time,t1.edm_id,t1.status as send_status,t2.id,t2.pro_id,t2.pro_name,t2.email_title,t2.user_side,t2.user_property,t2.user_pro_id,t2.user_type,t2.total_num,t2.content_template,t2.area,t2.send_user_id,t2.send_user,t2.send_num,t2.arrive_num,t2.open_num,t2.order_num,t2.pay_num,t2.ctime,t2.status FROM md_sendmail t1 left join md_edm_info t2 on t1.edm_id = t2.id left join md_users t3 on t1.email = t3.email where t1.type =1 and t1.edm_id != 0 ";
		if(!empty($data["user_side"])){
			$sql.=" and t2.user_side = ".$data["user_side"]." ";
		}
		if(!empty($data["email"])){
			$sql.=" and t1.email = '".$data["email"]."' ";
		}
		if(!empty($data["pro_id"])){
			$sql.=" and t2.pro_id =".$data["pro_id"]." ";
		}
		if(!empty($data["pro_name"])){
			$sql.=" and t2.pro_name like '%".$data["pro_name"]."%' ";
		}
		if(!empty($data["content_template"])){
			$sql.="and t2.content_template = ".$data["content_template"]." ";
		}
		if(!empty($data["area"])){
			$sql.=" ";
		}
		if(!empty($data["email_title"])){
			$sql.=" and t1.subject like '%".$data["email_title"]."%' ";
		}
		if(!empty($data["user_id"])){
			$sql.=" and t3.id = '".$data["user_id"]."' ";
		}
		
		if(!empty($data["start_time"])){
			$sql.=" and t1.send_time >= '".$data["start_time"]."' ";
		}
		if(!empty($data["end_time"])){
			$sql.=" and t1.send_time <= '".$data["end_time"]."' ";
		}

		$sql.=" order by t1.edm_id,t1.send_time,t1.id desc";
		
		if(!empty($data["page"]) && !empty($data["rows"])){
			if($data["page"] > 1){
				$start = ($data["page"] -1) * $data["rows"];
				$sql.=" limit ".$start.",".$data["rows"]." ";
			}else{
				$sql.=" limit 0,".$data["rows"]." ";
			}
		}
		
		$res = $this->db->query($sql)->result_array();
		//echo $this->db->last_query();
		return $res;
	}
	
	public function edm_usercount_serach($data){
		$num = 0;
		$sql = "SELECT count(t1.id) as num FROM md_sendmail t1 left join md_edm_info t2 on t1.edm_id = t2.id left join md_users t3 on t1.email = t3.email where t1.type =1 and t1.edm_id != 0 ";
		if(!empty($data["user_side"])){
			$sql.=" and t2.user_side = ".$data["user_side"]." ";
		}
		if(!empty($data["email"])){
			$sql.=" and t1.email = '".$data["email"]."' ";
		}
		if(!empty($data["pro_id"])){
			$sql.=" and t2.pro_id =".$data["pro_id"]." ";
		}
		if(!empty($data["pro_name"])){
			$sql.=" and t2.pro_name like '%".$data["pro_name"]."%' ";
		}
		if(!empty($data["content_template"])){
			$sql.="and t2.content_template = ".$data["content_template"]." ";
		}
		if(!empty($data["area"])){
			$sql.=" ";
		}
		if(!empty($data["email_title"])){
			$sql.=" and t1.subject like '%".$data["email_title"]."%' ";
		}
		if(!empty($data["user_id"])){
			$sql.=" and t3.id = '".$data["user_id"]."' ";
		}
		
		if(!empty($data["start_time"])){
			$sql.=" and t1.send_time >= '".$data["start_time"]."' ";
		}
		if(!empty($data["end_time"])){
			$sql.=" and t1.send_time <= '".$data["end_time"]."' ";
		}

		$sql.=" order by t1.edm_id,t1.send_time,t1.id desc";
		
	
		$res = $this->db->query($sql)->row_array();
		if($res){
			$num = $res["num"];
		}
		return $num;
	}
	
	public function count_emd_info(){
		$num = 0;
		$sql = "SELECT count(id) as num FROM md_edm_info ";
		$res = $this->db->query($sql)->row_array();
		if($res){
			$num = $res["num"];
		}
		return $num;
		
	}
	
	/*
	 * 根据查询条件获取edm列表
	* $product 产品编号
	* return 成功返回数组，失败返回false
	*/
	public function search_edm_sum($data){
		$result = FALSE;
			
		$sql = "SELECT sum(total_num) as sum_total_num,sum(arrive_num) as sum_arrive_num,sum(open_num) as sum_open_num  FROM md_edm_info where 1=1 ";
	
	if(!empty($data["user_side"])){
			$sql.=" and user_side = ".$data["user_side"]." ";
		}
		if(!empty($data["email"])){
			$sql.=" and send_user like '%".$data["email"]."%' ";
		}
		if(!empty($data["pro_id"])){
			$sql.=" and pro_id =".$data["pro_id"]." ";
		}
		if(!empty($data["pro_name"])){
			$sql.=" and pro_name like '%".$data["pro_name"]."%' ";
		}
		if(!empty($data["content_template"])){
			$sql.="and content_template = ".$data["content_template"]." ";
		}
		if(!empty($data["start_time"])){
			$sql.=" and send_time >= '".$data["start_time"]."' ";
		}
		if(!empty($data["end_time"])){
			$sql.=" and send_time <= '".$data["end_time"]."' ";
		}
		if(!empty($data["area"])){
			$sql.="";
		}
		if(!empty($data["email_title"])){
			$sql.=" and email_title like '%".$data["email_title"]."%' ";
		}
		if(!empty($data["user_id"])){
			$sql.=" and send_user_id like '%".$data["user_id"]."%' ";
		}
		
		$sql.=" order by send_time,id desc";
		
	
		//echo $sql."<br>";
	
		$res = $this->db->query($sql)->row_array();
		if(empty($res)){
			return $result;
		}else{
			return $res;
		}
	}
	
	//检查用户是否打开邮件 未打开过返回true 打开返回false
	public function get_sendmail($data){
		$sql = 'SELECT user_email from md_edm_sendmail  where theme_id = "'.$data["theme_id"].'" and user_email = "'.$data["user_email"].'" ';
		$res = $this->db->query($sql)->result_array();
		if(empty($res)){
			return true;
		}else{
			return false;
		}
	}
	
	//保存用户提交的信息，返回最终的id号
	public function insert_sendmail($data){
		$sql = 'INSERT INTO md_edm_sendmail (theme_id,side,user_email,send_time,is_open,open_time,open_num,is_register,register_time) VALUES ';
		$sql .=' ("'.$data["theme_id"].'","'.$data["side"].'","'.$data["user_email"].'","'.$data["send_time"].'","'.$data["is_open"].'","'.$data["open_time"].'","'.$data["open_num"].'","'.$data["is_register"].'","'.$data["register_time"].'")';
		//echo $sql."<br>";
		$res = $this->db->query($sql);
		return $res;
	}
	
	//保存用户提交的信息，返回最终的id号
	public function update_sendmail($data){
		$sql = 'update md_edm_sendmail set open_num = open_num+1 where theme_id = "'.$data["theme_id"].'" and user_email = "'.$data["user_email"].'" ';
		$res = $this->db->query($sql);
		return $res;
	}
	
	
	//保存用户提交的信息，返回最终的id号
	public function update_sendnum($theme){
		$sql = 'update md_edm_info set open_num = open_num +1 where id = "'.$theme.'"';
		$res = $this->db->query($sql);
		return $res;
	}
	
	
	//检查用户是否打开邮件 未打开过返回true 打开返回false
	public function get_sendmail_info($mail,$title){
		$sql = 'SELECT status,send_time from md_sendmail  where email = "'.$mail.'" and subject = "'.$title.'" ';
		//echo $sql."\n";
		$res = $this->db->query($sql)->row_array();
		if(empty($res)){
			return false;
		}else{
			return $res;
		}
	}
	
	
	//检查是否保存过数据信息
	public function check_edm_userinfo($data){
		
		$sql ='SELECT id from md_edm_info  where pro_id = "'.$data["pro_id"].'" and pro_name = "'.$data["pro_name"].'"  and item_num = "'.$data["item_num"].'" and item_content = "'.$data["item_content"].'" and serial_num ="'.$data["serial_num"].'" and pro_picture ="'.$data["pro_picture"].'" and pro_url = "'.$data["pro_url"].'" ';
		$sql.=' and email_title= "'.$data["email_title"].'" and email_des="'.$data["email_des"].'" and email_contents="'.$data["email_contents"].'" and content_template="'.$data["content_template"].'" and user_side= "'.$data["user_side"].'" and send_num="'.$data["send_num"].'"';
		$res = $this->db->query($sql)->row_array();
		if(empty($res)){
			return false;
		}else{
			return $res["id"];
		}
	}
	
	//检查是否保存过数据信息
	public function get_refund_email(){
		$email_info = array();
		$email = array();
		
		$cache_key = sprintf('%s', "refund".date("YmdH")."user");
		if(md_memcache::get($cache_key)){
			$email = md_memcache::get($cache_key);
		}else{
			$sql ='SELECT email from md_edm_refund where email !="" group by email ';
			$res = $this->db->query($sql)->result_array();
			//$this->db->close();
			if(!empty($res)){
				foreach ($res as $key=>$val){
					$email_info[] = $val["email"];
				}
			}
				
			md_memcache::set($cache_key, $email_info, 3600);
			$email = md_memcache::get($cache_key);
		}
		return $email;
	}
	
	
	//查询发送的有效营销类邮件
	//$type 营销方式,$state 发送状态
	public function get_marketing_email($type,$state,$data){
		$res = array();
		$type = isset($type)?intval($type):"1";
		$state = isset($state)?intval($state):"1";
		
		$sql = "SELECT t1.id,t1.email,t1.subject,t1.send_time,t1.edm_id,t1.status,t2.send_user,t2.tag FROM md_sendmail t1 ";
		$sql .= " left join md_edm_info t2 on t1.edm_id = t2.id where t1.type =".$type." and t1.status = ".$state." and t1.edm_id != 0 order by t1.send_time desc";
		
		if(!empty($data["page"]) && !empty($data["rows"])){
			if($data["page"] > 1){
				$start = ($data["page"] -1) * $data["rows"];
				$sql.=" limit ".$start.",".$data["rows"]." ";
			}else{
				$sql.=" limit 0,".$data["rows"]." ";
			}
		}
		
		$res = $this->db->query($sql)->result_array();
		return $res;
	}
	
	public function get_marketing_count($type,$state){
		$res = array();
		$type = isset($type)?intval($type):"1";
		$state = isset($state)?intval($state):"1";
	
		$sql = "SELECT count(t1.id) as num FROM md_sendmail t1 ";
		$sql .= " left join md_edm_info t2 on t1.edm_id = t2.id where t1.type =".$type." and t1.status = ".$state." and t1.edm_id != 0 order by t1.send_time desc";
		
		$res = $this->db->query($sql)->row_array();
		$num =0;
		if(empty($res)){
			return $num;
		}else{
			return $res["num"];
		}
		return $res;
	}
	
	
	//保存用户提交的信息，返回最终的id号
	public function insert_effect_user($data){
		$sql = 'INSERT INTO md_edm_effect_user (email,subject,tag,state,edm_id,open_time,open_num,ctime) VALUES ';
		$sql .=' ("'.$data["email"].'","'.$data["subject"].'","'.$data["tag"].'","'.$data["state"].'","'.$data["edm_id"].'","'.$data["open_time"].'","'.$data["open_num"].'","'.$data["ctime"].'")';
		$res = $this->db->query($sql);
		return $res;
	}
	
	public function check_effect_user($tag,$email,$subject){
		$sql = "SELECT id FROM md_edm_effect_user where 1=1 and tag = '".$tag."' and email = '".$email."' ";
		$res = $this->db->query($sql)->row_array();
		if(empty($res)){
			return true;
		}else{
			return false;
		}
	}
	
	
	//查询发送的有效营销类邮件
	//$type 营销方式,$state 发送状态
	public function get_effect_user($data){
		$res = array();
		$sql = "SELECT t1.*,t2.send_time FROM md_edm_effect_user t1 left join md_sendmail t2 on (t1.email = t2.email and t1.edm_id = t2.edm_id) where 1=1 ";
		
		if(!empty($data["tag"])){
			$sql.=" and t1.tag like '%".$data["tag"]."%' ";
		}
		if(!empty($data["state"])){
			$sql.=" and t1.state = ".$data["state"]." ";
		}
		if(!empty($data["email"])){
			$sql.=" and t1.email = '".$data["email"]."' ";
		}
		if(!empty($data["start_time"])){
			$sql.=" and t2.send_time >= '".$data["start_time"]."' ";
		}
		if(!empty($data["end_time"])){
			$sql.=" and t2.send_time <= '".$data["end_time"]."' ";
		}
	
		if(!empty($data["page"]) && !empty($data["rows"])){
			if($data["page"] > 1){
				$start = ($data["page"] -1) * $data["rows"];
				$sql.=" limit ".$start.",".$data["rows"]." ";
			}else{
				$sql.=" limit 0,".$data["rows"]." ";
			}
		}	
		$res = $this->db->query($sql)->result_array();
		//echo $this->db->last_query();
		return $res;
	}
	
	public function get_effect_count($data){
		$res = array();
		$sql = "SELECT count(t1.id) as num FROM md_edm_effect_user t1 left join md_sendmail t2 on (t1.email = t2.email and t1.edm_id = t2.edm_id) where 1=1 ";
	
		if(!empty($data["tag"])){
			$sql.=" and t1.tag like '%".$data["tag"]."%' ";
		}
		if(!empty($data["state"])){
			$sql.=" and t1.state = ".$data["state"]." ";
		}
		if(!empty($data["email"])){
			$sql.=" and t1.email = '".$data["email"]."' ";
		}
		if(!empty($data["start_time"])){
			$sql.=" and t2.send_time >= '".$data["start_time"]."' ";
		}
		if(!empty($data["end_time"])){
			$sql.=" and t2.send_time <= '".$data["end_time"]."' ";
		}
		$res = $this->db->query($sql)->row_array();
		if(empty($res)){
			return $res["num"] =0;
		}else{
			return $res["num"];
		}
	}
	
	
	public function get_tag_email($data,$start,$end){
		$res = array();
		$sql = "SELECT email,tag FROM md_edm_effect_user where 1=1 and state = 2 ";
		if(!empty($data)){
			foreach ($data as $key=>$val){
				if($key == 0){
					$sql.=" and (tag = '".$val."'";
				}else{
					$sql.=" or tag = '".$val."'";
				}
			}
			$sql.=" )";
		}
		$sql.=" group by email order by open_time asc";
		
		if(!empty($end)){
			$num = $end - $start;
			$sql.=" limit ".$start.",".$num." ";
		}
		
		$res = $this->db->query($sql)->result_array();
		foreach ($res as $key=>$val){
			$email[] = $val['email'];
			$tag[] = $val['tag'];
		}
		$email = array_unique($email);
		$tag = array_unique($tag);
		return array("email"=>$email,"tag"=>$tag);
	}
	
	
	public function get_tag_list($data){
		$sql = "SELECT *,count(id) as num FROM md_edm_effect_user where 1=1 ";
		if(!empty($data["tag"])){
			$sql.=" and tag = '".$data["tag"]."'";
		}
		$sql.=" group by tag order by ctime asc";
		
		if(!empty($data["page"]) && !empty($data["rows"])){
			if($data["page"] > 1){
				$start = ($data["page"] -1) * $data["rows"];
				$sql.=" limit ".$start.",".$data["rows"]." ";
			}else{
				$sql.=" limit 0,".$data["rows"]." ";
			}
		}
		$res = $this->db->query($sql)->result_array();
		if(!empty($res)){
			return $res;
		}else{
			return false;
		}
	}
	
	public function get_tag_count($tag,$state){
		$num = 0;
		$sql = "SELECT count(email) as email_num FROM md_edm_effect_user where 1=1 and state = ".$state."";
		if(!empty($tag)){
			$sql.=" and tag = '".$tag."'";
		}
		$res = $this->db->query($sql)->row_array();
		//echo $this->db->last_query();
		if(!empty($res)){
			$num = $res["email_num"];
			return $num;
		}else{
			return $num;
		}
	}
	
	
	public function del_edm_info($edm_id){
		$sql = "delete FROM `md_edm_info` where `id`=".$edm_id." ";
		$res = $this->db->query($sql);
		return 1;
	}
	public function get_pro($pro_id) {
		
		$sql ="SELECT `logo`,`des` FROM `md_product` WHERE `id`=".$pro_id." ";
		$res = $this->db->query($sql)->row_array();
		if(empty($res)){
			return false;
		}else{
			return $res;
		}		
	}	
}

