<?php defined('BASEPATH') OR exit('No direct script access allowed');

class Bbs_repair_add_post extends CI_Controller
{

	public function __construct()
	{
		parent::__construct();
		$this->load->model('comment_model');
		$this->load->model('Product_m');
		$this->load->model('common');
	}

	public function test()
	{
		echo '99';
		exit;
	}
	public function create_project_update_image($product_id)
	{
		$this->load->helper('bbs_common_helper');
		$this->load->library('md_imagick');
		$where = array(
					'pro_id' => $product_id
				);
		$this->db->select('logo');
		$this->db->from('md_product_update');
		$this->db->where($where);
		$logo_list = $this->db->get()->result_array();

		$path = 'bbs_attachments/' . date('Y') . '/' . date('m') . '/' . date('d') . '/';
        $img_prefix_path = _gc('uploads_path') . $path;
        if ( !file_exists($img_prefix_path) ) {
            if( !@mkdir($img_prefix_path, 0777, TRUE)) {
                echo '创建上传目录失败';
                exit;
            }
        }
		foreach($logo_list as $logo){
			$logo_sys_path = _gc('uploads_path') . str_replace('uploads/', '', $logo['logo']);
			$image_name = basename($logo['logo']);
	        $copy_path = $img_prefix_path . $image_name;
	        if( !@copy($logo_sys_path, $copy_path) ){
	            echo ++$i . '复制项目图' . $logo_sys_path . '失败<br>';
	            // exit;
	        }else{
				attachment_process($copy_path);
				echo ++$i . ' 处理图片' . $logo_sys_path . ' 成功<br>';
	        }
		}

	}

	public function create_image($product_id)
	{
		$this->load->helper('bbs_common_helper');
		$this->load->library('md_imagick');
		$where = array(
					'if_show' => 1,
					'id' => $product_id
				);
		$this->db->select('logo');
		$this->db->from('md_product');
		$this->db->where($where);
		$logo_list = $this->db->get()->result_array();

		$path = 'bbs_attachments/' . date('Y') . '/' . date('m') . '/' . date('d') . '/';
        $img_prefix_path = _gc('uploads_path') . $path;
        if ( !file_exists($img_prefix_path) ) {
            if( !@mkdir($img_prefix_path, 0777, TRUE)) {
                echo '创建上传目录失败';
                exit;
            }
        }
		foreach($logo_list as $logo){
			$logo_sys_path = _gc('uploads_path') . str_replace('uploads/', '', $logo['logo']);
			$image_name = basename($logo['logo']);
	        $copy_path = $img_prefix_path . $image_name;
	        if( !@copy($logo_sys_path, $copy_path) ){
	            echo ++$i . '复制项目图' . $logo_sys_path . '失败<br>';
	            // exit;
	        }else{
				attachment_process($copy_path);
				echo ++$i . ' 处理图片' . $logo_sys_path . ' 成功<br>';
	        }
		}
	}

	public function index($pro_id)
	{
		// $top_tag_name = trim($top_tag_name);
		if (empty($pro_id))
		{
			echo '请输入审核通过的项目ID';
			exit;
		}

		// $tag_id = $this->bbs_tag_m->get_tag_id_by_name($tag_name);
		// if (empty($tag_id))
		// {
		// 	echo '标签不存在';
		// 	exit;
		// }

		// $is_top_tag = $this->bbs_tag_m->is_toptag_by_id($tag_id);
		// if ($is_top_tag === FALSE)
		// {
		// 	echo '标签非顶级标签，不允许';
		// 	exit;
		// }

		$product = $this->Product_m->get_product_info($pro_id);
		if (empty($product))
		{
			echo '项目不存在';
			exit;
		}

		$topic_id = $this->comment_model->acp_add_thread($product['user_id'], $product["name"], $product["des"], $product["logo"], $product["video"], $product['category']);
		if (empty($topic_id))
		{
			echo '生成摩西帖子失败！';
			exit;
		}

		$pro_result = $this->common->update('md_product', array('id' => $pro_id), array("moxi_post_id"=>$topic_id));
		if ( ! empty($pro_result))
		{
			echo '项目成功生成 摩西帖子';
			exit;
		}
	}

	public function repair_1116($pro_id, $post_id)
	{
		$this->load->helper('bbs_common_helper');
		$this->load->model('bbs_post_m');
		$this->load->model('bbs_tag_m');

		$product = $this->Product_m->get_product_info($pro_id);
		if (empty($product))
		{
			echo '项目不存在';
			exit;
		}


		// 查询帖子的信息
		$post_info = $this->bbs_post_m->get_post_record($post_id);
		$pic_url = $post_info['pic_url'];
		$author_id = $post_info['author_id'];
		$ctime = $post_info['ctime'];
		$tagids = $post_info['tagids'];
		$tag_array = explode(',', $tagids);


		// 查询product表
		$image = $product['logo'];
		$image_name = basename($image);
		$year = date('Y', $ctime);
		$month = date('m', $ctime);
		$day = date('d', $ctime);
        $img_syspath = _gc('uploads_path') . "bbs_attachments/$year/$month/$day/";
        $attachment_path = $img_syspath . $image_name;
        $project_path = _gc('uploads_path'). str_replace('uploads/', '', $product['logo']);

        // 复制到bbs的路径
        if( !copy($project_path, $attachment_path) ){
            echo '复制项目图失败';
            exit;
        }

        // 调用图片处理函数
        attachment_process($attachment_path);

        // 插入 bbs_attachment_* 表数据
        $attachment_data = array();
        $attachment_data['post_id'] = $post_id;
        $attachment_data['path'] = $pic_url;
        $attachment_data['ctime'] = $ctime;
        $attachment_data['uid'] = $author_id;
        $this->bbs_post_m->add_post_attachment($attachment_data);

        // 插入 bbs_post_tag_map 表数据 - 一个帖子可能有多个tag
        foreach($tag_array as $tag_id){
            $post_tag_data = array();
            $post_tag_data['post_id'] = $post_id;
            $post_tag_data['tag_id'] = $tag_id;
            $post_tag_data['ctime'] = $ctime;
            $this->bbs_post_m->add_post_tag_map_record($post_tag_data);
        }

        // 更新tag的帖子计数
        foreach($tag_array as $tag_id){
            $this->bbs_tag_m->update_tag_post_num($tag_id);
        }
        
        #发主贴获取积分
        // $this->md_common->add_user_score($author_id, SCORE_GROUP_POST, 0, FALSE);
        echo $post_id;
	}

	/*
	 *
	 *	修复之前的项目审核时，传递的标签名，而非是标签tag_id ------------------------- 坑死我了啊
	 *
	 */
	public function repair_verify_product()
	{
		$this->load->model('bbs/bbs_m');
		$this->load->model('bbs/bbs_tag_m');
		$this->load->model('bbs/bbs_post_m');

		$post_ids = array(853,845,274,876,839,866,877,838,392,840,864,399);
		foreach($post_ids as $post_id){

			// 先获取 pro_tag 标签字段
			$this->db->select('pro_tag');
			$this->db->from('md_product');
			$this->db->where('moxi_post_id', $post_id);
			$pro_info = $this->db->get()->row_array();
			$pro_tag = $pro_info['pro_tag'];

			// 通过 pro_tag 查询所有的 tag_id
			$tag_names = explode(',', $pro_tag);
            foreach($tag_names as $tag_name){
                $tag_id = $this->bbs_tag_m->get_tag_id_by_name($tag_name); 

                // 只有查询到的才能添加进来，有的tag_name可能查不到
                if($tag_id)
                    $tag_ids[] = $tag_id;
            }
            $tagids = join(',', $tag_ids);

            // 更新post表 tagids 字段
			$this->moxi_db->where('post_id', $post_id);
			$this->moxi_db->update('bbs_post', array('tagids' => $tagids));

			// 获取post表的ctime
			$this->moxi_db->from('bbs_post');
			$this->moxi_db->where('post_id', $post_id);
			$post_info = $this->moxi_db->get()->row_array();
			$ctime = $post_info['ctime'] ? $post_info['ctime'] : 0;

			// 先删除所有的 post_tag_map 对应关系
			$this->moxi_db->where('post_id', $post_id);
			$delete_bool = $this->moxi_db->delete('bbs_post_tag_map');
			if( ! $delete_bool){
				echo '删除帖子ID - '.$post_id.' 的对应关系失败';
				exit;
			}	

			// 重新生成 post_tag_map 记录
			foreach($tag_ids as $tag_id){
				$insert_data = array(
									'post_id' => $post_id,
									'tag_id' => $tag_id,
									'ctime' => $ctime
								);
				$insert_bool = $this->bbs_post_m->add_post_tag_map_record($insert_data);
				if( ! $insert_bool ){
					echo '新增帖子ID - '.$post_id.' 的对应关系失败';
					exit;
				}
			}

			echo '处理帖子ID - '.$post_id.' 成功';
			echo '<br>';
		}

	}

	/**
	 * 	更新帖子的摘要字段 + 获取编辑器的图片重新添加到附件表中
	 * 	(note: 之前的项目的图片的存放，可能是在 'logo/' )
	 * 	(note2: 对于新上线的内容，不用重新修复，所以我们得确定个日期 ---------- 得是摩点ueditor重新上线的日期)
	 */
	public function repair_post_abstract($date)
	{
		$this->load->model('bbs/bbs_m');
		$this->load->model('bbs/bbs_post_m');
		$this->load->helper('bbs_common_helper');

		$date = $date ? (string)$date : '2015-12-1';
		$date .= ' 23:59:59'; 		// 加上当前的最后期限
		$unix_timestamp = strtotime($date);
        $this->moxi_db->from('bbs_post_content pc');
        $this->moxi_db->join('bbs_post p', 'p.post_id = pc.post_id', 'left');
        $this->moxi_db->where('p.ctime < ', $unix_timestamp);
        $post_list = $this->moxi_db->get()->result_array();
        foreach($post_list as $post_info){

        	// 更新简介
        	$content = $post_info['content'];

        	// 因数据库中的内容，已经是转实体后，我们先反转回去，然后再截取摘要！
        	// note：经测试发现！可能项目的content，已经经过了实体转换？在这边发现需要进行2次的反转，才能去除掉 <tag> HTML标签！
	        $abstract = htmlspecialchars(bbs_substr(strip_tags(htmlspecialchars_decode(htmlspecialchars_decode($content, ENT_QUOTES), ENT_QUOTES)), 200), ENT_QUOTES);
	        $pattern = '/&lt;img.+src=.*((ueditor\/image\/.+)|(project/.+)|(logo/.+)|(old/.+))&quot;.*\/&gt;/Ui';       // ueditor/image/2015/12/30/2343143123241.jpg

	        // 添加附件图片
	        $img_count = preg_match_all($pattern, $content, $img_matches);
	        $content_image_paths = $content_aids = $update_data = array();
	        if($img_count){
		        $path_prefix = 'bbs_attachments/' . date('Y') . '/' . date('m') . '/' . date('d') . '/';
		        $path = 'uploads/' . $path_prefix;
		        $img_syspath = _gc('uploads_path') . $path_prefix;
		        if ( !empty($img_syspath) && !file_exists($img_syspath)) {
		            if( !mkdir($img_syspath, 0777, TRUE)) {
						echo '<p>创建上传目录失败</p>';
		                exit;
		            }
		        }

	            foreach($img_matches[1] as $img_path){
	                $content_image_paths[] = $img_path;
	            }

	            // 循环处理图片
	            foreach($content_image_paths as $content_image_path)
	            {
	                $content_image_syspath = _gc('uploads_path'). str_replace('uploads/', '', $content_image_path);

	                // 复制到bbs的路径
	                $image_name = basename($content_image_path);
	                $pic_url = $path . $image_name;
	                if( !@copy($content_image_syspath, $img_syspath . $image_name) ){
	                    echo '<p>复制编辑器内容上传图失败</p>';
	                    exit;
	                }

	                // 调用图片处理函数
	                attachment_process($img_syspath . $image_name);

	                // 插入 bbs_attachment_* 表数据
	                $attachment_data = array();
	                $attachment_data['post_id'] = $post_info['post_id'];
	                $attachment_data['path'] = $pic_url;
	                $attachment_data['ctime'] = time();		/* 这里的时间，其实应该是帖子的真实发帖时间！ */
	                $attachment_data['uid'] = $author_id;
	                $aid = $this->bbs_post_m->add_post_attachment($attachment_data);         // 得到附件的ID数组
	                if( ! $aid){
	                	echo "<p>给帖子ID: {$post_info['post_id']}，添加附件记录失败!</p>";
		                exit;
		            }else{
	                	echo "<p>给帖子ID: {$post_info['post_id']}，添加附件记录成功，附件ID: {$aid}!</p>";
		            }
		            echo '<br>';
	                $content_aids[] = $aid;
	            }

	            /* 得将上传图片，都添加上对应的aid属性 */

	            // 完整的图片标签
	            $i = 0;
	            foreach($img_matches[0] as $content_img)
	            {
	                $img_prefix = substr($content_img, 0, strrpos($content_img, '/'));
	                $img_suffix = strrchr($content_img, '/');
	                $replace_img = $img_prefix . " aid=&quot;{$content_aids[$i]}&quot; " . $img_suffix;
	                $replace_src = add_suffix($content_image_paths[$i], '_compress');
	                $replace_src = str_replace('ueditor/image', 'bbs_attachments', $replace_src);
	                $replace_src = str_replace('project/', 'bbs_attachments/'.date('Y').'/'.date('m').'/'.date('d').'/', $replace_src);
	                $replace_src = str_replace('logo/', 'bbs_attachments/'.date('Y').'/'.date('m').'/'.date('d').'/', $replace_src);
	                $replace_src = str_replace('old/', 'bbs_attachments/'.date('Y').'/'.date('m').'/'.date('d').'/', $replace_src);
	                $content = str_replace($content_img, $replace_img, $content);       // 添加 aid
	                $content = str_replace($content_image_paths[$i], $replace_src, $content);   // 给图片添加 _compress 后缀
	                $i++;
	            }
	            $update_data['content'] = $content;
	        }

            // 开始更新帖子内容
            $update_data['abstract'] = $abstract;
            $update_bool = $this->bbs_post_m->update_post_record($post_info['post_id'], $update_data);
            if( ! $update_bool){
                echo "<p>更新帖子ID: {$post_info['post_id']}，内容图片aid+摘要失败</p>";
	            exit;
	        }else{
                echo "<p>更新帖子ID: {$post_info['post_id']}，内容图片aid+摘要成功<p>";
	        }

            echo "<p>处理帖子ID: {$post_info['post_id']}成功</p>";
		}
	}

}

