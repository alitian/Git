<?php
	defined('BASEPATH') OR exit('No direct script access allowed');

	/*
	 *	bbs 中的任务计划
	 */
	class Bbs_cron extends CI_Controller
	{

		public function __construct()
		{
			parent::__construct();
	        $this->load->model('bbs/bbs_m');
	        $this->load->model('bbs/bbs_post_m');
	        $this->load->model('bbs/bbs_tag_m');
	        $this->load->model('bbs_cron_model');
		}

		// 定时检测用户禁言状态，发现禁言时间已到，更改数据
		public function check_banned()
		{
			$banned_user_list = $this->bbs_cron_model->get_banned_user_list();	
			$enable_uid_array = array();
			if($banned_user_list){
				foreach($banned_user_list as $user_info){
					if($user_info['ban_e_time'] <= time()){
						$enable_uid_array[] = $user_info['uid'];
					}		
				}
			}

			// 发现有复合条件的，解除禁言
			if($enable_uid_array){
				$this->bbs_cron_model->enable_users($enable_uid_array);
				$this->bbs_cron_model->add_user_manager_log($enable_uid_array);
			}

			echo '自动解除用户禁言脚本，于' . date('Y-m-d H:i:s') . '执行完毕！\n';
			if($enable_uid_array){
				$uids = join(',', $enable_uid_array);
				echo '解禁用户ID为：' . $uids;
			}
		}

		// 定时检查置顶帖子状态，发现已到置顶时间，取消置顶
		public function check_stick()
		{
			$stick_post_tag_map_list = $this->bbs_cron_model->get_stick_post_tag_map_list();
			$del_stick_id_array = array();
			if($stick_post_tag_map_list){
				foreach($stick_post_tag_map_list as $stick_row){
					if($stick_row['stick_e_time'] <= time()){
						$del_stick_id_array[] = $stick_row['id'];
					}
				}
			}

			// 发现有过期的，取消置顶状态
			if($del_stick_id_array){
				$this->bbs_cron_model->del_stick_map($del_stick_id_array);
				$this->bbs_cron_model->add_post_manager_log($del_stick_id_array);
			}

			echo '自动取消置顶脚本，于' . date('Y-m-d H:i:s') . '执行完毕！\n';
			if($del_stick_id_array){
				$mapids = join(',', $del_stick_id_array);
				echo '取消置顶关系ID为：' . $mapids;
			}
		}

	}